"use strict";
/*
 * Это главный файл, который отвечает за работу страницы 3D визуализации.
 */
window.onload = () => {
    let marksCheckbox = document.getElementById('marks-checkbox');
    let northRadio = document.getElementById('north-radio');
    let southRadio = document.getElementById('south-radio');
    let forecastRadio = document.getElementById('forecast-radio');
    let nowcastRadio = document.getElementById('nowcast-radio');
    let diffuseRadio = document.getElementById('diffuse-radio');
    let ionsRadio = document.getElementById('ions-radio');
    let monoRadio = document.getElementById('mono-radio');
    let waveRadio = document.getElementById('wave-radio');
    let totalRadio = document.getElementById('total-radio');
    let showMarksCheckbox = document.getElementById('marks-checkbox');
    let showMarginCheckbox = document.getElementById('show-margin-checkbox');
    let showDayNightCheckbox = document.getElementById('show-day-night-checkbox');
    let denoiseCheckbox = document.getElementById('denoise-checkbox');
    let colorIndicatorLimitInput = document.getElementById('color-indicator-limit-input');
    let marginLevelInput = document.getElementById('margin-level-input');
    let showHeatmapCheckbox = document.getElementById('show-heatmap-checkbox');
    let smoothMarginCheckbox = document.getElementById('smooth-margin-checkbox');
    northRadio.checked = true;
    nowcastRadio.checked = true;
    totalRadio.checked = true;
    showMarginCheckbox.checked = true;
    showDayNightCheckbox.checked = true;
    denoiseCheckbox.checked = true;
    showHeatmapCheckbox.checked = true;
    smoothMarginCheckbox.checked = true;
    showMarksCheckbox.style.display = 'none';
    let view = new View();
    let model = new Model(view);
    let controller = new Controller(model, view);
    colorIndicatorLimitInput.value = OvationPrimeData3DUnit.maxValue.toString();
    marginLevelInput.value = model.marginLevel.toString();
    // model.getCertainFileData()
    view.changeColorIndicatorCanvasVisibility();
    view.adjustCamera();
    model.getFilesNumberAndLastFileData();
    controller.addEventListeners();
    let fileNumberLabel = document.getElementById("file-number-label");
    let fromLabel = document.getElementById("from-label");
    let fileNameLabel = document.getElementById("file-name-label");
    let currentFileNumberInput = document.getElementById('current-file-number-input');
    let filesNumberInput = document.getElementById('files-number-input');
    let fileNameInput = document.getElementById('file-name-input');
    let gotoFileButton = document.getElementById('go-to-certain-file-button');
    let gotoCertainFileInput = document.getElementById('go-to-certain-file-input');
    fileNumberLabel.style.display = "none";
    currentFileNumberInput.style.display = "none";
    fromLabel.style.display = "none";
    filesNumberInput.style.display = "none";
    fileNameLabel.style.display = "none";
    fileNameInput.style.display = "none";
    gotoFileButton.style.display = "none";
    gotoCertainFileInput.style.display = "none";
    controller.enableAndDisableSomeGUIElements();
};
